{
  "basics": {
    "name": "Ryan Lin",
    "image": "",
    "email": "rylin@caltech.edu",
    "phone": "(415) 866-0174",
    "url": "https://rlin232.github.io/",
    "summary": "Motivated undergraduate student at Caltech pursuing a B.S. in Computer Science."
  },
  "work": [
    {
      "name": "The MITRE Corporation",
      "url": "https://www.mitre.org/",
      "dates": [
        {
          "startDate": "2024-06",
          "endDate": "2024-09",
          "highlights": [
            "Designed a pipeline leveraging Retrieval-Augmented Generation (RAG) and Large Language Models (LLMs) to enhance domain-specific knowledge retrieval and automate the creation of security tests from STIGs, accelerating security profile delivery by 500%.",
            "Utilized OpenAI API and LangChain's Chroma vector store, and custom embeddings to optimize context retrieval from various security resource documentations."
          ],
          "position": "Software Engineering & Machine Learning Intern"
        },
        {
          "startDate": "2023-06",
          "endDate": "2023-09",
          "highlights": [
            "Engineered an end-to-end DevSecOps pipeline for SAF using applications, libraries, and tools developed by MITRE and the security community. Hosted pipeline on EC2.",
            "Automated pipeline for key tasks (hardening, validation, visualization) to inform platform owners of security risks and accelerate capability deployment in development, test, and production environments.",
            "Presented and demonstrated the prototype pipeline directly to corporate partners and government sponsors, articulating intricate technical details while highlighting its operational benefits and simplicity."
          ],
          "position": "Software Development & DevSecOps Intern"
        },
        {
          "startDate": "2022-06",
          "endDate": "2022-09",
          "highlights": [
            "Developed an initial, modern reimplementation for STIGViewer within Heimdall (a full-stack application for viewing security results). The backend uses PostgreSQL, JavaScript, and Typescript. The frontend uses Vue and Typescript.",
            "Expanded the enterprise capabilities of Heimdall, a flagship application within the SAF, and validated/tested server-side Rest API calls to the Heimdall PostgreSQL database."
          ],
          "position": "Software Engineering Intern"
        },
        {
          "startDate": "2021-06",
          "endDate": "2021-09",
          "highlights": [
            "Authored the SAF CLI (Command Line Interface), a software that streamlines security automation for IT Systems and DevOps pipelines. The tool has over 25,000 downloads by the security community.", 
            "Created and published libraries to normalize outputs from various cybersecurity scanning tools into Heimdall Data Format (HDF) for various government sponsors and commercial partners."
          ],
          "position": "Software Engineering Intern"
        }
      ]
    },
    {
      "name": "Caltech - Anima AI + Science Lab",
      "position": "Undergraduate Researcher",
      "url": "http://tensorlab.cms.caltech.edu/users/anima/",
      "dates": [
        {
          "startDate": "2023-10",
          "highlights": [
            "Selected as a Caltech Summer Undergraduate Research Fellow",
            "Tuned hyperparameters for neural operator models to improve performance in solving PDEs",
            "Improving code quality and flexibility of the neural operator repository.", 
            "Configured development environment to interface with High Performance Computing (HPC) cluster for training large models."
          ],
          "position": "Researcher"
        }
      ]
    }
  ],
  "education": [
    {
      "institution": "California Institute of Technology",
      "url": "https://www.caltech.edu/",
      "studyType": "B.S. Computer Science",
      "startDate": "2023",
      "endDate": "2026",
      "graduateCourses": [
        "ACM 116: Probability Models",
        "CS 163: Projects in Machine Learning",
        "CS 155: Machine Learning and Data Mining",
        "CS 156a: Learning Systems",
        "CS 159: Advanced Topics in Machine Learning: Large Language Models for Reasoning"
      ],
      "undergraduateCourses": [
        "CS 1: Computer Programming",
        "CS 2: Programming Methods (Data Structures)",
        "CS 3: Software Design",
        "Ma 1abc: Calculus of One and Several Variables and Linear Algebra",
        "Ma 2: Differential Equations",
        "Ma 3: Probability and Statistics",
        "CS 13: Mathematical Foundations of Computer Science (Discrete Mathematics)",
        "CS 24: Computer Systems"
      ]
    }
  ],
  "publications": [
    {
      "title": "Strategic Collusion of LLM Agents: Market Division in Multi-Commodity Competitions",
      "date": "2024",
      "url": "https://arxiv.org/abs/2410.00031",
      "author": "Ryan Y. Lin, Siddhartha Ojha, Kevin Cai and Maxwell F. Chen"
    }
  ],
  "awards": [
    {
      "title": "National Merit Scholarship Finalist",
      "date": "2023",
      "awarder": "National Merit Scholarship Corporation",
      "url": "https://www.nationalmerit.org/"
    },
    {
      "title": "FIRST Tech Challenge Dean's Award Semi-Finalist",
      "date": "2022",
      "awarder": "FIRST",
      "url": "https://www.firstinspires.org/robotics/ftc"
    },
    {
      "title": "USACO Silver",
      "date": "2020",
      "awarder": "USA Computing Olympiad",
      "url": "https://usaco.org/"
    },
    {
      "title": "Stanford Online High School Math Division Award",
      "date": "2020",
      "awarder": "Stanford Online High School"
    }
  ],
  "skills": [
    {
      "name": "Programming Languages",
      "icon": "fa-solid fa-hashtag",
      "keywords": [
        "Java", "Python", "Typescript", "JavaScript", "R", "Ruby", "C", "C++", "HTML/CSS", "Shell Script", "Batch"
      ]
    },
    {
      "name": "Developer Practices",
      "icon": "fa-solid fa-hashtag",
      "keywords": [
        "Continuous Integration (CI)", "Agile Development", "Test-Driven Development", "Machine Learning", "Code Review"
      ]
    },
    {
      "name": "Developer Tools",
      "icon": "fa-solid fa-hashtag",
      "keywords": [
        "PyTorch", "Jupyter", "Weights & Biases", "SLURM", "GitHub", "Android Studios", "AWS", "Brew", "Bash/Shell", "Docker", "Eclipse", "Firebase", "NodeJS", "VSCode", "PyCharm", "RStudio", "PostgreSQL", "Jenkins", "Vuex", "Chef", "Ansible"
      ]
    }
  ],
  "languages": [
    {
      "language": "English",
      "fluency": "Native speaker",
      "icon": ""
    },
    {
      "language": "Chinese",
      "fluency": "Fluent",
      "icon": ""
    },
    {
      "language": "Burmese",
      "fluency": "Fluent (speaker)",
      "icon": ""
    }
  ],
  "projects": [
    {
      "name": "Quantum ML Models",
      "summary": "Explored structural and mathematical parallels of a Convolutional Neural Network and a Quantum Circuit. Implemented a hybrid quantum/classical binary classification model using Pennylane and TensorFlow",
      "highlights": ["Quantum Computing", "Machine Learning"],
      "date": "2023-05",
      "url": "https://rlin232.github.io/projects/QuantumML/"
    },
    {
      "name": "Lattice Point Geometry Proof Portfolio",
      "summary": "A collection of 100+ proofs exploring the fundamental properties of the lattice plane.",
      "highlights": ["Number Theory", "Graph Theory", "Abstract Algebra"],
      "date": "2023-05",
      "url": "https://rlin232.github.io/projects/LPGPortfolio/"
    },
    {
      "name": "Stock Prediction Using LSTMs With Sentiment Analysis",
      "summary": "Implemented a multivariable LSTM model in R to predict the trajectory of any given ticker. Notable considered variables include previous time series data and a sentiment analysis on news headers.",
      "highlights": ["Machine Learning", "LSTM", "Finance"],
      "date": "2022-04",
      "url": "https://rlin232.github.io/projects/StockLSTM/"
    },
    {
      "name": "Y86 Architecture Simulation",
      "summary": "Programmed and implemented a simulator of a processor and assembler in Y86, a simplified version of X86.",
      "highlights": ["Computer Systems and Architecture", "Assembly"],
      "date": "2022-05",
      "url": "https://github.com/Rlin232/Y-86"
    }
  ]
}
