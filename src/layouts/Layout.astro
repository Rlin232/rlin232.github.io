---
import '../styles/global.css';

interface Props {
	title: string;
	description?: string;
}

const { title, description = "Academic personal website" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<title>{title}</title>
	</head>
	<body class="min-h-screen bg-white dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 transition-colors duration-300">
		<nav class="border-b border-neutral-200 dark:border-neutral-700 transition-colors duration-300">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="flex justify-between h-16">
					<div class="flex">
						<a href="/" class="flex items-center text-xl font-bold hover:text-accent-600 dark:hover:text-accent-400 transition-colors duration-300">
							Home
						</a>
					</div>
					<div class="flex space-x-8 items-center">
						<a href="/publications" class="flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors duration-300">Publications</a>
						<a href="/projects" class="flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors duration-300">Projects</a>
						<a href="/cv" class="flex items-center hover:text-accent-600 dark:hover:text-accent-400 transition-colors duration-300">CV</a>
						<button
							id="theme-toggle"
							type="button"
							class="text-neutral-500 dark:text-neutral-400 hover:bg-accent-100 dark:hover:bg-accent-900/50 focus:outline-none focus:ring-4 focus:ring-accent-200 dark:focus:ring-accent-800 rounded-lg text-sm p-2.5 transition-all duration-300"
						>
							<svg
								id="theme-toggle-dark-icon"
								class="hidden w-5 h-5"
								fill="currentColor"
								viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
							</svg>
							<svg
								id="theme-toggle-light-icon"
								class="hidden w-5 h-5"
								fill="currentColor"
								viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
								></path>
							</svg>
						</button>
					</div>
				</div>
			</div>
		</nav>
		
		<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
			<slot />
		</main>

		<script is:inline>
			// Check for saved theme preference, otherwise use system preference
			if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark');
			}

			// Toggle theme function
			function toggleTheme() {
				// Toggle theme in localStorage and document
				if (localStorage.getItem('color-theme')) {
					if (localStorage.getItem('color-theme') === 'light') {
						document.documentElement.classList.add('dark');
						localStorage.setItem('color-theme', 'dark');
					} else {
						document.documentElement.classList.remove('dark');
						localStorage.setItem('color-theme', 'light');
					}
				} else {
					if (document.documentElement.classList.contains('dark')) {
						document.documentElement.classList.remove('dark');
						localStorage.setItem('color-theme', 'light');
					} else {
						document.documentElement.classList.add('dark');
						localStorage.setItem('color-theme', 'dark');
					}
				}
				
				// Update button icons
				updateThemeToggleButton();
			}

			// Update theme toggle button appearance
			function updateThemeToggleButton() {
				const darkIcon = document.getElementById('theme-toggle-dark-icon');
				const lightIcon = document.getElementById('theme-toggle-light-icon');

				if (document.documentElement.classList.contains('dark')) {
					darkIcon.classList.add('hidden');
					lightIcon.classList.remove('hidden');
				} else {
					lightIcon.classList.add('hidden');
					darkIcon.classList.remove('hidden');
				}
			}

			// Add click event listener to theme toggle button
			document.getElementById('theme-toggle').addEventListener('click', toggleTheme);

			// Initial button state
			updateThemeToggleButton();
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}

	/* Global transition for all color changes */
	:root {
		--transition-duration: 300ms;
	}

	* {
		transition: background-color var(--transition-duration) ease,
							border-color var(--transition-duration) ease,
							color var(--transition-duration) ease,
							fill var(--transition-duration) ease,
							stroke var(--transition-duration) ease;
	}

	/* Global link styles */
	:root {
		--link-color: #f97316; /* accent-500 */
		--link-color-dark: #fb923c; /* accent-400 */
		--link-hover-color: #ea580c; /* accent-600 */
		--link-hover-color-dark: #fdba74; /* accent-300 */
		--link-visited-color: #c2410c; /* accent-700 */
		--link-visited-color-dark: #ea580c; /* accent-600 */
	}

	.prose a {
		color: var(--link-color);
		text-decoration: none;
		transition: color var(--transition-duration) ease;
	}

	.prose a:hover {
		color: var(--link-hover-color);
	}

	.prose a:visited {
		color: var(--link-visited-color);
	}

	.dark .prose a {
		color: var(--link-color-dark);
	}

	.dark .prose a:hover {
		color: var(--link-hover-color-dark);
	}

	.dark .prose a:visited {
		color: var(--link-visited-color-dark);
	}

	/* Navigation links should keep their original styling */
	nav a {
		color: inherit;
	}
</style>
